import React from 'react';
import { ScanResults } from '../../services/azureSecurityApi';
import './ScanResultsDisplay.css';

interface ScanResultsDisplayProps {
  results: ScanResults;
  onClose?: () => void;
}

const ScanResultsDisplay: React.FC<ScanResultsDisplayProps> = ({ 
  results, 
  onClose 
}) => {
  const getSeverityIcon = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical': return '🚨';
      case 'high': return '⚠️';
      case 'medium': return '⚡';
      case 'low': return 'ℹ️';
      default: return '📋';
    }
  };

  const formatDuration = (duration: string) => {
    // Assuming duration is in format like "PT1H30M" or "1h 30m"
    return duration.replace('PT', '').replace('H', 'h ').replace('M', 'm');
  };

  if (!results.results) {
    return (
      <div className="scan-results-display">
        <div className="results-header">
          <h3>Scan Results</h3>
          {onClose && (
            <button onClick={onClose} className="close-btn">×</button>
          )}
        </div>
        <div className="no-results">
          <p>No detailed results available for this scan.</p>
          <p>Status: {results.status}</p>
          {results.completed_at && (
            <p>Completed: {new Date(results.completed_at).toLocaleString()}</p>
          )}
        </div>
      </div>
    );
  }

  const { vulnerabilities, summary, compliance_status } = results.results;

  return (
    <div className="scan-results-display">
      <div className="results-header">
        <div className="header-content">
          <h3>Security Scan Results</h3>
          <div className="scan-info">
            <span className="scan-id">Scan ID: {results.scan_id}</span>
            {results.completed_at && (
              <span className="completed-time">
                Completed: {new Date(results.completed_at).toLocaleString()}
              </span>
            )}
          </div>
        </div>
        {onClose && (
          <button onClick={onClose} className="close-btn">×</button>
        )}
      </div>

      <div className="results-content">
        {/* Summary Section */}
        <div className="summary-section">
          <h4>Scan Summary</h4>
          <div className="summary-grid">
            <div className="summary-card">
              <div className="summary-number">{summary.total_vulnerabilities}</div>
              <div className="summary-label">Total Vulnerabilities</div>
            </div>
            <div className="summary-card">
              <div className="summary-number">{formatDuration(summary.scan_duration)}</div>
              <div className="summary-label">Scan Duration</div>
            </div>
            <div className="summary-card">
              <div className="summary-number">{summary.coverage}</div>
              <div className="summary-label">Coverage</div>
            </div>
          </div>

          <div className="severity-breakdown">
            <h5>Vulnerabilities by Severity</h5>
            <div className="severity-grid">
              {Object.entries(summary.by_severity).map(([severity, count]) => (
                <div 
                  key={severity} 
                  className={`severity-item ${severity.toLowerCase()}`}
                >
                  <span className="severity-icon">{getSeverityIcon(severity)}</span>
                  <span className="severity-name">{severity.charAt(0).toUpperCase() + severity.slice(1)}</span>
                  <span className="severity-count">{count}</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Vulnerabilities Section */}
        <div className="vulnerabilities-section">
          <h4>Vulnerabilities Found ({vulnerabilities.length})</h4>
          <div className="vulnerabilities-list">
            {vulnerabilities.map((vuln, index) => (
              <div key={index} className="vulnerability-card">
                <div className="vuln-header">
                  <div className="vuln-title-section">
                    <span className={`severity-badge ${vuln.severity.toLowerCase()}`}>
                      {getSeverityIcon(vuln.severity)} {vuln.severity.toUpperCase()}
                    </span>
                    <h5>{vuln.title}</h5>
                    {vuln.cvss_score && (
                      <span className="cvss-score">CVSS: {vuln.cvss_score}</span>
                    )}
                  </div>
                  <div className="vuln-target">Target: {vuln.target}</div>
                </div>
                
                <div className="vuln-content">
                  <div className="vuln-description">
                    <p>{vuln.description}</p>
                  </div>
                  
                  {vuln.recommendations.length > 0 && (
                    <div className="vuln-recommendations">
                      <h6>Recommendations:</h6>
                      <ul>
                        {vuln.recommendations.map((rec, recIndex) => (
                          <li key={recIndex}>{rec}</li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Compliance Section */}
        {compliance_status && compliance_status.length > 0 && (
          <div className="compliance-section">
            <h4>Compliance Assessment</h4>
            <div className="compliance-frameworks">
              {compliance_status.map((framework, index) => (
                <div key={index} className="compliance-framework">
                  <div className="framework-header">
                    <h5>{framework.framework}</h5>
                    <div className="compliance-score">
                      Score: {framework.score}/100
                    </div>
                  </div>
                  
                  <div className="compliance-findings">
                    {framework.findings.map((finding, findingIndex) => (
                      <div 
                        key={findingIndex}
                        className={`compliance-finding ${finding.status.toLowerCase()}`}
                      >
                        <div className="finding-header">
                          <span className={`status-indicator ${finding.status.toLowerCase()}`}>
                            {finding.status === 'pass' ? '✓' : finding.status === 'fail' ? '✗' : '⚠'}
                          </span>
                          <span className="requirement">{finding.requirement}</span>
                        </div>
                        <div className="finding-details">{finding.details}</div>
                      </div>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Report Download */}
        {results.report_url && (
          <div className="report-section">
            <h4>Download Report</h4>
            <a 
              href={results.report_url}
              target="_blank"
              rel="noopener noreferrer"
              className="download-btn"
            >
              📄 Download Detailed Report
            </a>
          </div>
        )}
      </div>
    </div>
  );
};

export default ScanResultsDisplay;